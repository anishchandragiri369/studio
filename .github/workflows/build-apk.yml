name: Build Android APK

on:
  workflow_dispatch:
    inputs:
      api_base_url:
        description: 'API Base URL for the mobile app'
        required: true
        default: 'https://your-netlify-site.netlify.app'
  push:
    tags:
      - 'mobile-v*'

jobs:
  build-apk:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Setup Java JDK
      uses: actions/setup-java@v3
      with:
        distribution: 'adopt'
        java-version: '11'
    
    - name: Setup Android SDK
      uses: android-actions/setup-android@v2
    
    - name: Install dependencies
      run: npm ci
    
    - name: Create environment file
      run: |
        echo "NEXT_PUBLIC_API_BASE_URL=${{ github.event.inputs.api_base_url || 'https://your-netlify-site.netlify.app' }}" > .env.local
        echo "NEXT_PUBLIC_BUILD_MODE=static" >> .env.local
        echo "MOBILE_BUILD=true" >> .env.local
    
    - name: Build static export
      run: npm run build:static
    
    - name: Sync Capacitor
      run: npx cap sync
    
    - name: Build APK
      working-directory: ./android
      run: ./gradlew assembleDebug
    
    - name: Upload APK
      uses: actions/upload-artifact@v3
      with:
        name: app-debug-apk
        path: android/app/build/outputs/apk/debug/app-debug.apk
    
    - name: Create Release (if tagged)
      if: startsWith(github.ref, 'refs/tags/mobile-v')
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Mobile Release ${{ github.ref }}
        draft: false
        prerelease: false
    
    - name: Upload APK to Release
      if: startsWith(github.ref, 'refs/tags/mobile-v')
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: android/app/build/outputs/apk/debug/app-debug.apk
        asset_name: elixr-mobile.apk
        asset_content_type: application/vnd.android.package-archive
